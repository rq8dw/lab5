package org.example.validators;

import java.util.Scanner;

public class InputValidator {
    private static final Scanner scanner = new Scanner(System.in);

    public static void checkForExit(String input) {
        if ("exit".equalsIgnoreCase(input)) {
            System.out.println("Завершение программы...");
            System.exit(0); // Завершаем программу
        }
    }

    // Метод для чтения целого числа (int)
    public static int readInt(String prompt) {
        while (true) {
            try {
                System.out.print(prompt);
                String input = scanner.nextLine();
                checkForExit(input); // Проверяем, не введена ли команда "exit"
                return Integer.parseInt(input);
                //return Integer.parseInt(scanner.nextLine());
            } catch (NumberFormatException e) {
                System.out.println("Ошибка: введите целое число.");
            }
        }
    }

    // Метод для чтения длинного целого числа (long)
    public static long readLong(String prompt) {
        while (true) {
            try {
                System.out.print(prompt);
                String input = scanner.nextLine();
                checkForExit(input); // Проверяем, не введена ли команда "exit"
                return Long.parseLong(input);
            } catch (NumberFormatException e) {
                System.out.println("Ошибка: введите длинное целое число.");
            }
        }
    }

    // Метод для чтения числа с плавающей точкой (float)
    public static float readFloat(String prompt) {
        while (true) {
            try {
                System.out.print(prompt);
                String input = scanner.nextLine();
                checkForExit(input); // Проверяем, не введена ли команда "exit"
                return Float.parseFloat(input);
            } catch (NumberFormatException e) {
                System.out.println("Ошибка: введите число с плавающей точкой.");
            }
        }
    }

    // Метод для чтения числа с плавающей точкой (double)
    public static double readDouble(String prompt) {
        while (true) {
            try {
                System.out.print(prompt);
                String input = scanner.nextLine();
                checkForExit(input); // Проверяем, не введена ли команда "exit"
                return Double.parseDouble(input);
            } catch (NumberFormatException e) {
                System.out.println("Ошибка: введите число с плавающей точкой.");
            }
        }
    }

    // Метод для чтения строки
    public static String readString(String prompt) {
        System.out.print(prompt);
        String input = scanner.nextLine();
        checkForExit(input); // Проверяем, не введена ли команда "exit"
        return input;
    }
    public static void checkNotNull(Object value, String fieldName) {
        if (value == null) {
            throw new IllegalArgumentException("Поле '" + fieldName + "' не может быть null.");
        }
    }


    public static void checkGreaterThan(long value, long min, String fieldName) {
        if (value <= min) {
            throw new IllegalArgumentException("Поле '" + fieldName + "' должно быть больше " + min + ".");
        }
    }


    public static void checkLessThanOrEqual(long value, long max, String fieldName) {
        if (value > max) {
            throw new IllegalArgumentException("Поле '" + fieldName + "' не может быть больше " + max + ".");
        }
    }
}
